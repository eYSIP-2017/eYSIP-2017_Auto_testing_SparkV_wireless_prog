
Bar_LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000198  0000020c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000198  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00000e04  00000000  00000000  0000020c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000ddf  00000000  00000000  00001010  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00001def  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  44:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  50:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  54:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  58:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  5c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  68:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  6c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  70:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  74:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  78:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  7c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  80:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  84:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  88:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  8c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  90:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  94:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  98:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  9c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  ac:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  bc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  cc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  dc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  e0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	0e 94 ad 00 	call	0x15a	; 0x15a <main>
  f8:	0c 94 ca 00 	jmp	0x194	; 0x194 <_exit>

000000fc <__bad_interrupt>:
  fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <Bar_LED_Config>:


//Function to configure LCD port
void Bar_LED_Config(void)
{
 DDRJ = DDRJ | 0xFF; //all the LCD pin's direction set as output
 100:	e4 e0       	ldi	r30, 0x04	; 4
 102:	f1 e0       	ldi	r31, 0x01	; 1
 104:	80 81       	ld	r24, Z
 106:	8f ef       	ldi	r24, 0xFF	; 255
 108:	80 83       	st	Z, r24
 PORTJ = PORTJ | 0xFA; // all the LCD pins are set to logic 0 except PORTC 7
 10a:	e5 e0       	ldi	r30, 0x05	; 5
 10c:	f1 e0       	ldi	r31, 0x01	; 1
 10e:	80 81       	ld	r24, Z
 110:	8a 6f       	ori	r24, 0xFA	; 250
 112:	80 83       	st	Z, r24
 114:	08 95       	ret

00000116 <disable_Bar_LED>:
}

void disable_Bar_LED()
{
DDRJ = DDRJ & 0x00;
 116:	e4 e0       	ldi	r30, 0x04	; 4
 118:	f1 e0       	ldi	r31, 0x01	; 1
 11a:	80 81       	ld	r24, Z
 11c:	10 82       	st	Z, r1
PORTJ = PORTJ & 0x00;
 11e:	e5 e0       	ldi	r30, 0x05	; 5
 120:	f1 e0       	ldi	r31, 0x01	; 1
 122:	80 81       	ld	r24, Z
 124:	10 82       	st	Z, r1
 126:	08 95       	ret

00000128 <port_init>:
}

//Function to Initialize PORTS
void port_init()
{
	Bar_LED_Config();
 128:	0c 94 80 00 	jmp	0x100	; 0x100 <Bar_LED_Config>

0000012c <clear>:
}

void clear()
{
 PORTJ = PORTJ & 0x00;
 12c:	e5 e0       	ldi	r30, 0x05	; 5
 12e:	f1 e0       	ldi	r31, 0x01	; 1
 130:	80 81       	ld	r24, Z
 132:	10 82       	st	Z, r1
 134:	08 95       	ret

00000136 <Set_LED>:
}

void Set_LED(int x)
{
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	1f 92       	push	r1
 13c:	cd b7       	in	r28, 0x3d	; 61
 13e:	de b7       	in	r29, 0x3e	; 62
clear();
 140:	89 83       	std	Y+1, r24	; 0x01
 142:	0e 94 96 00 	call	0x12c	; 0x12c <clear>
PORTJ = PORTJ | x;
 146:	e5 e0       	ldi	r30, 0x05	; 5
 148:	f1 e0       	ldi	r31, 0x01	; 1
 14a:	90 81       	ld	r25, Z
 14c:	89 81       	ldd	r24, Y+1	; 0x01
 14e:	98 2b       	or	r25, r24
 150:	90 83       	st	Z, r25
}
 152:	0f 90       	pop	r0
 154:	df 91       	pop	r29
 156:	cf 91       	pop	r28
 158:	08 95       	ret

0000015a <main>:
}

//Function to Initialize PORTS
void port_init()
{
	Bar_LED_Config();
 15a:	0e 94 80 00 	call	0x100	; 0x100 <Bar_LED_Config>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 15e:	2f ef       	ldi	r18, 0xFF	; 255
 160:	8f ef       	ldi	r24, 0xFF	; 255
 162:	96 e8       	ldi	r25, 0x86	; 134
 164:	21 50       	subi	r18, 0x01	; 1
 166:	80 40       	sbci	r24, 0x00	; 0
 168:	90 40       	sbci	r25, 0x00	; 0
 16a:	e1 f7       	brne	.-8      	; 0x164 <main+0xa>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <main+0x14>
 16e:	00 00       	nop
{
 port_init();

 _delay_ms(3000);

 clear();
 170:	0e 94 96 00 	call	0x12c	; 0x12c <clear>

 Set_LED(0x64);
 174:	84 e6       	ldi	r24, 0x64	; 100
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	0e 94 9b 00 	call	0x136	; 0x136 <Set_LED>
 17c:	2f ef       	ldi	r18, 0xFF	; 255
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	96 e8       	ldi	r25, 0x86	; 134
 182:	21 50       	subi	r18, 0x01	; 1
 184:	80 40       	sbci	r24, 0x00	; 0
 186:	90 40       	sbci	r25, 0x00	; 0
 188:	e1 f7       	brne	.-8      	; 0x182 <main+0x28>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <main+0x32>
 18c:	00 00       	nop

 _delay_ms(3000);

 disable_Bar_LED();
 18e:	0e 94 8b 00 	call	0x116	; 0x116 <disable_Bar_LED>
}
 192:	08 95       	ret

00000194 <_exit>:
 194:	f8 94       	cli

00000196 <__stop_program>:
 196:	ff cf       	rjmp	.-2      	; 0x196 <__stop_program>
